<?php include _layout() . '/header.phtml';?>
<div class="main">
    <h1>Welcome CS8</h1>
</div>
<h2>Example - folder structure</h2>
<div class="p8">
    <p>
        &langle; <a href="<?=_route('welcome');?>"> back</a>
    </p>
    <pre class="structure">
      <span class="folder">[src]</span>
        &#9474; 
        &#9500;&#9472;&#9472;&#9472;<span class="folder">[config]</span> # config and setting
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="folder">[enabled]</span> # flag file for enabled modules 
        &#9474;      &#9474;      &#9474;
        &#9474;      &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">cli.php</span> # enabled module flag file
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="folder">[overwrite]</span> # overwrite modules
        &#9474;      &#9474;      &#9474;
        &#9474;      &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">example_one_2_two.php</span> # model over write
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="file">error-handle.php</span> # system handle error, you can change it to suit your project
        &#9474;      &#9474;
        &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">local.php</span> # all settings: system, APIs, local server....
        &#9474;   
        &#9500;&#9472;&#9472;&#9472;<span class="folder">[data]</span> # stored static data 
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="folder">[log]</span> # store system log files..
        &#9474;      &#9474;      &#9474;
        &#9474;      &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">2008-09-15.txt</span> # iso date as file name
        &#9474;      &#9474;
        &#9474;      &#9474;
        &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="folder">[system]</span> # store system data
        &#9474;             &#9474;
        &#9474;             &#9493;&#9472;&#9472;&#9472;<span class="file">content_types.php</span> # stored content type in php array
        &#9474;   
        &#9500;&#9472;&#9472;&#9472;<span class="folder">[layout]</span> # project common html structure files. * there are module specified layout in module folder
        &#9474;      &#9474;
        &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">_404.phtml</span> # default 404 page
        &#9474;   
        &#9500;&#9472;&#9472;&#9472;<span class="folder">[modules]</span> # coding space
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;.<span class="file">route.php</span> # routing info
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="file">indexController.php</span> # controller file 
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="folder">[assert]</span> # store such as css, js, image, video pdf... and used like: _route('assert', ['module'=>'welcome_example','assert'=>'welcome.css', 'version'=>1.09]);  
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="folder">[layout]</span> # layout files of the module 
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="folder">[view]</span>
        &#9474;      &#9474;      &#9474;
        &#9474;      &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="folder">[index]</span> # store view file for indexController hence "index" ==> "indexController"
        &#9474;      &#9474;             &#9474;
        &#9474;      &#9474;             &#9493;&#9472;&#9472;&#9472;<span class="file">xxx.phtml</span> # view file for "xxx()" method in indexController. must end with phtml instead html
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="file">my_model.php</span> # model file
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="folder">[models]</span> # store all model files under here if you like
        &#9474;      &#9474;      &#9474;
        &#9474;      &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">model2.php</span> # you can put model file whatever you want
        &#9474;      &#9474;
        &#9474;      &#9500;&#9472;&#9472;&#9472;<span class="file">.setup.1.0.0.0.php.done</span> # start/update script that have been run
        &#9474;      &#9474;
        &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">.setup.1.0.0.1.php</span> # script will be run when app called
        &#9474;
        &#9500;&#9472;&#9472;&#9472;<span class="folder">[public]</span> # web document root: all static data here: js, css, image, uploads(for public view) .....
        &#9474;      &#9474;
        &#9474;      &#9493;&#9472;&#9472;&#9472;<span class="file">index.php</span> # app start point, called by web-server. do not modify!
        &#9474;
        &#9500;&#9472;&#9472;&#9472;<span class="folder">[system]</span> # system folders contains: app, helper, logger, defined constants. do not modify unless you know what you doing
        &#9474;
        &#9500;&#9472;&#9472;&#9472;<span class="folder">[vendor]</span> # 3rd party modules( use psr12 loader). 
        &#9474;
        &#9500;&#9472;&#9472;&#9472;<span class="file">composer.json</span> # contains loader and modules
        &#9474;
        &#9500;&#9472;&#9472;&#9472;<span class="file">exec</span> # a php file to handle console call ( $ php exec [router] [param1] [param2] ...). do not modify.
        &#9474;
        &#9493;&#9472;&#9472;&#9472;<span class="file">README.md</span> # read me file
      
    </pre>

</div>
<?php include _layout() . '/footer.phtml';?>